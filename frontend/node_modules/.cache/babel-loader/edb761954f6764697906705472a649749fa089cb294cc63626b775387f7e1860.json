{"ast":null,"code":"\"use client\";import{useState}from\"react\";import{useNavigate,Link}from\"react-router-dom\";import\"./Login.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(_ref){let{onLogin}=_ref;const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[error,setError]=useState(\"\");const navigate=useNavigate();const handleSubmit=e=>{e.preventDefault();setError(\"\");// Clear previous errors\n// Basic validation and mock authentication\nif(email===\"user@example.com\"&&password===\"password123\"){onLogin();navigate(\"/home\");}else{setError(\"Invalid email or password.\");}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"register-link\",children:[\"New User? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Register\"})]})]})});}export default Login;","map":{"version":3,"names":["useState","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","Login","_ref","onLogin","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required","to"],"sources":["C:/Users/tambe/.vscode/stock-app/src/pages/Login/Login.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login({ onLogin }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Clear previous errors\r\n\r\n    // Basic validation and mock authentication\r\n    if (email === \"user@example.com\" && password === \"password123\") {\r\n      onLogin();\r\n      navigate(\"/home\");\r\n    } else {\r\n      setError(\"Invalid email or password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n        <p className=\"register-link\">\r\n          New User? <Link to=\"/register\">Register</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,YAAY,CAEZ,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,WAAW,CAAEC,IAAI,KAAQ,kBAAkB,CACpD,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,QAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAc,IAAb,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACxB,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAgB,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAgB,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBJ,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEd;AACA,GAAIL,KAAK,GAAK,kBAAkB,EAAIE,QAAQ,GAAK,aAAa,CAAE,CAC9DH,OAAO,CAAC,CAAC,CACTO,QAAQ,CAAC,OAAO,CAAC,CACnB,CAAC,IAAM,CACLD,QAAQ,CAAC,4BAA4B,CAAC,CACxC,CACF,CAAC,CAED,mBACEX,IAAA,QAAKgB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9Bf,KAAA,QAAKc,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBjB,IAAA,OAAAiB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdf,KAAA,SAAMgB,QAAQ,CAAEL,YAAa,CAAAI,QAAA,eAC3Bf,KAAA,QAAKc,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBjB,IAAA,UAAOmB,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,QAAM,CAAO,CAAC,cACrCjB,IAAA,UACEoB,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,OAAO,CACVC,KAAK,CAAEhB,KAAM,CACbiB,QAAQ,CAAGT,CAAC,EAAKP,QAAQ,CAACO,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE,CAC1CG,QAAQ,MACT,CAAC,EACC,CAAC,cACNvB,KAAA,QAAKc,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBjB,IAAA,UAAOmB,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,WAAS,CAAO,CAAC,cAC3CjB,IAAA,UACEoB,IAAI,CAAC,UAAU,CACfC,EAAE,CAAC,UAAU,CACbC,KAAK,CAAEd,QAAS,CAChBe,QAAQ,CAAGT,CAAC,EAAKL,WAAW,CAACK,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE,CAC7CG,QAAQ,MACT,CAAC,EACC,CAAC,CACLf,KAAK,eAAIV,IAAA,MAAGgB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEP,KAAK,CAAI,CAAC,cAClDV,IAAA,WAAQoB,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,cACPf,KAAA,MAAGc,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,YACjB,cAAAjB,IAAA,CAACF,IAAI,EAAC4B,EAAE,CAAC,WAAW,CAAAT,QAAA,CAAC,UAAQ,CAAM,CAAC,EAC7C,CAAC,EACD,CAAC,CACH,CAAC,CAEV,CAEA,cAAe,CAAAd,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}