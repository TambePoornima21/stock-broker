{"ast":null,"code":"\"use client\";import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import\"./Register.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Register(_ref){let{onRegister}=_ref;const[username,setUsername]=useState(\"\");const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[error,setError]=useState(\"\");const navigate=useNavigate();const handleSubmit=e=>{e.preventDefault();setError(\"\");if(password!==confirmPassword){setError(\"Passwords do not match.\");return;}// Mock registration logic\nconsole.log(\"Registering:\",{username,email,password});// In a real app, you'd send this to a backend\nonRegister();// Simulate successful registration\nnavigate(\"/home\");};return/*#__PURE__*/_jsx(\"div\",{className:\"register-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"register-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",value:username,onChange:e=>setUsername(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"})]})]})});}export default Register;","map":{"version":3,"names":["useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Register","_ref","onRegister","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","handleSubmit","e","preventDefault","console","log","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required"],"sources":["C:/Users/tambe/.vscode/stock-app/src/pages/Register/Register.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Register.css\";\r\n\r\nfunction Register({ onRegister }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    // Mock registration logic\r\n    console.log(\"Registering:\", { username, email, password });\r\n    // In a real app, you'd send this to a backend\r\n    onRegister(); // Simulate successful registration\r\n    navigate(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"register-card\">\r\n        <h2>Register</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n          <button type=\"submit\">Register</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}